name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
      - feature/*
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to (stage/prod)'
        required: false
        default: ''

env:
  DOCKER_REGISTRY: docker.io # Or your private registry, e.g., ghcr.io
  DOCKER_IMAGE_NAME_BACKEND: secure-app-backend
  DOCKER_IMAGE_NAME_FRONTEND: secure-app-frontend

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    outputs:
      backend_image_tag: ${{ steps.set_backend_tag.outputs.tag }}
      frontend_image_tag: ${{ steps.set_frontend_tag.outputs.tag }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Get current date for image tag
      id: date
      run: echo "::set-output name=now::$(date +'%Y%m%d%H%M%S')"

    - name: Set Backend Image Tag
      id: set_backend_tag
      run: echo "tag=${{ github.sha }}-${{ steps.date.outputs.now }}" >> $GITHUB_OUTPUT

    - name: Set Frontend Image Tag
      id: set_frontend_tag
      run: echo "tag=${{ github.sha }}-${{ steps.date.outputs.now }}" >> $GITHUB_OUTPUT

    - name: Build Backend & Run Tests
      run: |
        cd backend
        ./mvnw clean install -Dspring.security.oauth2.client.registration.google.client-id=${{ secrets.GOOGLE_CLIENT_ID }} -Dspring.security.oauth2.client.registration.google.client-secret=${{ secrets.GOOGLE_CLIENT_SECRET }}
      env:
        GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
        GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}

    - name: Run Backend SAST (SpotBugs)
      run: cd backend && ./mvnw spotbugs:check

    - name: Run Backend SCA (OWASP Dependency-Check)
      run: cd backend && ./mvnw org.owasp:dependency-check-maven:check

    - name: Build and Push Backend Docker Image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: true
        tags: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME_BACKEND }}:${{ steps.set_backend_tag.outputs.tag }}
        build-args:
          GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}

    - name: Install Frontend Dependencies
      run: npm install
      working-directory: frontend

    - name: Run Frontend Tests
      run: npm test -- --watchAll=false
      working-directory: frontend

    - name: Run Frontend SCA (npm audit)
      run: npm audit
      working-directory: frontend

    - name: Build and Push Frontend Docker Image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: true
        tags: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME_FRONTEND }}:${{ steps.set_frontend_tag.outputs.tag }}

  deploy-dev:
    needs: build-and-test
    runs-on: ubuntu-latest
    environment: dev
    steps:
    - name: Checkout GitOps Repo
      uses: actions/checkout@v4
      with:
        repository: ${{ github.repository }} # Use the same repo for simplicity, or your dedicated GitOps repo
        token: ${{ secrets.GIT_OPS_REPO_PAT }}

    - name: Update Dev Kustomize Image Tag (Backend)
      run: |
        sed -i 's|image: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME_BACKEND }}:.*|image: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME_BACKEND }}:${{ needs.build-and-test.outputs.backend_image_tag }}|' k8s/overlays/dev/deployment.yaml
        cat k8s/overlays/dev/deployment.yaml # For debugging

    - name: Update Dev Kustomize Image Tag (Frontend)
      run: |
        sed -i 's|image: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME_FRONTEND }}:.*|image: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME_FRONTEND }}:${{ needs.build-and-test.outputs.frontend_image_tag }}|' k8s/overlays/dev/deployment.yaml
        cat k8s/overlays/dev/deployment.yaml # For debugging

    - name: Commit and Push Dev Changes
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add k8s/overlays/dev/deployment.yaml
        git commit -m "[GitOps] Update dev images to ${{ needs.build-and-test.outputs.backend_image_tag }}" || echo "No changes to commit"
        git push

  deploy-stage:
    needs: build-and-test
    runs-on: ubuntu-latest
    environment:
      name: stage
      url: https://your-stage-app.example.com # Replace with your stage URL
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'stage'
    steps:
    - name: Checkout GitOps Repo
      uses: actions/checkout@v4
      with:
        repository: ${{ github.repository }}
        token: ${{ secrets.GIT_OPS_REPO_PAT }}

    - name: Update Stage Kustomize Image Tag (Backend)
      run: |
        sed -i 's|image: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME_BACKEND }}:.*|image: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME_BACKEND }}:${{ needs.build-and-test.outputs.backend_image_tag }}|' k8s/overlays/stage/deployment.yaml

    - name: Update Stage Kustomize Image Tag (Frontend)
      run: |
        sed -i 's|image: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME_FRONTEND }}:.*|image: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME_FRONTEND }}:${{ needs.build-and-test.outputs.frontend_image_tag }}|' k8s/overlays/stage/deployment.yaml

    - name: Commit and Push Stage Changes
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add k8s/overlays/stage/deployment.yaml
        git commit -m "[GitOps] Update stage images to ${{ needs.build-and-test.outputs.backend_image_tag }}" || echo "No changes to commit"
        git push

  deploy-prod:
    needs: build-and-test
    runs-on: ubuntu-latest
    environment:
      name: prod
      url: https://your-prod-app.example.com # Replace with your prod URL
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'prod'
    steps:
    - name: Checkout GitOps Repo
      uses: actions/checkout@v4
      with:
        repository: ${{ github.repository }}
        token: ${{ secrets.GIT_OPS_REPO_PAT }}

    - name: Update Prod Kustomize Image Tag (Backend)
      run: |
        sed -i 's|image: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME_BACKEND }}:.*|image: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME_BACKEND }}:${{ needs.build-and-test.outputs.backend_image_tag }}|' k8s/overlays/prod/deployment.yaml

    - name: Update Prod Kustomize Image Tag (Frontend)
      run: |
        sed -i 's|image: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME_FRONTEND }}:.*|image: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME_FRONTEND }}:${{ needs.build-and-test.outputs.frontend_image_tag }}|' k8s/overlays/prod/deployment.yaml

    - name: Commit and Push Prod Changes
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add k8s/overlays/prod/deployment.yaml
        git commit -m "[GitOps] Update prod images to ${{ needs.build-and-test.outputs.backend_image_tag }}" || echo "No changes to commit"
        git push

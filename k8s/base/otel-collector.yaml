apiVersion: v1
kind: ServiceAccount
metadata:
  name: opentelemetry-collector

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: opentelemetry-collector
  labels:
    app: opentelemetry-collector
spec:
  replicas: 1
  selector:
    matchLabels:
      app: opentelemetry-collector
  template:
    metadata:
      labels:
        app: opentelemetry-collector
    spec:
      serviceAccountName: opentelemetry-collector
      containers:
        - name: opentelemetry-collector
          image: otel/opentelemetry-collector-contrib:0.99.0 # Use a recent version
          command: ["--config=/etc/collector-config.yaml"]
          ports:
            - name: otlp-grpc
              containerPort: 4317
            - name: otlp-http
              containerPort: 4318
            - name: prometheus
              containerPort: 8888
          volumeMounts:
            - name: collector-config-vol
              mountPath: /etc/collector-config.yaml
              subPath: collector-config.yaml
      volumes:
        - name: collector-config-vol
          configMap:
            name: opentelemetry-collector-config

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: opentelemetry-collector-config
data:
  collector-config.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
          http:
      prometheus:
        config:
          scrape_configs:
            - job_name: 'secure-app-backend'
              scrape_interval: 5s
              static_configs:
                - targets: ['secure-app:8080'] # Assuming secure-app service is named secure-app

    processors:
      batch:

    exporters:
      logging:
        loglevel: debug
      # For Prometheus metrics
      prometheus:
        endpoint: "0.0.0.0:8888"
      # For Jaeger traces
      jaeger:
        endpoint: "jaeger-collector:14250"
        tls:
          insecure: true

    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [batch]
          exporters: [logging, jaeger]
        metrics:
          receivers: [otlp, prometheus]
          processors: [batch]
          exporters: [logging, prometheus]
